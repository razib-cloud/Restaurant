<?php
/*
* ProBot Version: 3.0
* Laravel Version: 10x
* Description: This source file "app/Http/Controllers/PaymentController.php" was generated by ProBot AI.
* Date: 2/21/2025 12:58:38 AM
* Contact: towhid1@outlook.com
*/

namespace App\Http\Controllers;

use App\Models\Payment;
use App\Models\Order;
use App\Models\Customer;
use App\Models\Payment_Method;
use App\Models\Payment_Status;
use Illuminate\Http\Request;

class PaymentController extends Controller
{
    public function index()
    {
        $payments = Payment::paginate(10);
        return view("pages.erp.payment.index", ["payments" => $payments]);
    }

    public function create()
    {
        return view("pages.erp.payment.create", [
            "orders" => Order::all(),
            "customers" => Customer::all(),
            "payment_methods" => Payment_Method::all(),
            "payment_statuss" => Payment_Status::all()
        ]);
    }

    public function store(Request $request)
    {
        $payment = new Payment();
        $payment->order_id = $request->order_id;
        $payment->customer_id = $request->customer_id;
        $payment->payment_method_id = $request->payment_method_id;
        $payment->payment_status_id = $request->payment_status_id;
        $payment->amount = $request->amount;
        $payment->transaction_id = $request->transaction_id;
        $payment->payment_date = $request->payment_date;

        $payment->save();

        return back()->with('success', 'Created Successfully.');
    }

    public function show($id)
    {
        $payment = Payment::find($id);

        if (!$payment) {
            return redirect()->route('payments.index')->with('error', 'Payment not found');
        }

        return view('pages.erp.payment.show', compact('payment'));
    }

    public function edit(Payment $payment)
    {
        return view("pages.erp.payment.edit", [
            "payment" => $payment,
            "orders" => Order::all(),
            "customers" => Customer::all(),
            "payment_methods" => Payment_Method::all(),
            "payment_statuss" => Payment_Status::all()
        ]);
    }

    public function update(Request $request, Payment $payment)
    {
        $payment->update($request->all());

        return redirect()->route("payments.index")->with('success', 'Updated Successfully.');
    }

    public function destroy(Payment $payment)
    {
        $payment->delete();
        return redirect()->route("payments.index")->with('success', 'Deleted Successfully.');
    }
}
